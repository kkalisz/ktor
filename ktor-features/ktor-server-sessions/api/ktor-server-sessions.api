public abstract interface class io/ktor/sessions/Cache {
	public abstract fun getOrCompute (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun invalidate (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun invalidate (Ljava/lang/Object;Ljava/lang/Object;)Z
	public abstract fun invalidateAll ()V
	public abstract fun peek (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/sessions/CacheStorage : io/ktor/sessions/SessionStorage {
	public fun <init> (Lio/ktor/sessions/SessionStorage;J)V
	public final fun getDelegate ()Lio/ktor/sessions/SessionStorage;
	public fun invalidate (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun read (Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun write (Ljava/lang/String;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/sessions/DirectoryStorageKt {
	public static final fun directorySessionStorage (Ljava/io/File;Z)Lio/ktor/sessions/SessionStorage;
	public static synthetic fun directorySessionStorage$default (Ljava/io/File;ZILjava/lang/Object;)Lio/ktor/sessions/SessionStorage;
}

